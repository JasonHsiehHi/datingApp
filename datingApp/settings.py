"""
Django settings for datingApp project.
Generated by 'django-admin startproject' using Django 3.2.
"""

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

DOMAIN = 'http://127.0.0.1:8000'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = str(os.getenv('SECRET_KEY'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'channels',
    'chat'  # chat.apps.ChatConfig
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'datingApp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        },
        "KEY_PREFIX": "caches"
    }
}

WSGI_APPLICATION = 'datingApp.wsgi.application'

ASGI_APPLICATION = "datingApp.asgi.application"

'''
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],  # docker run -p 6379:6379 -d redis:5 發布到port上
        },
    },
}

'''

CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # for test
    },
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# dealing with image files
MEDIA_ROOT = BASE_DIR / 'media'

MEDIA_URL = '/media/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
# 用於收集不同app資料夾中的static檔 並用manage.py collectstatic執行 轉入STATIC_ROOT中
# 當development時應直接使用STATICFILES_DIRS 但當deployment時應用manage.py collectstatic做部署

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

'''
STATIC_ROOT = BASE_DIR / 'static'
'''

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# for chat app
MINUTES_FOR_DURATION_TO_SCORE = 20

CROWDED_ROOM_NUM = 20  # if more than that, the GREET will recommend the city
PLENTY_ROOM_NUM = 10

SECONDS_FOR_CACHE_TTL = 60 * 30  # 用於緩衝內存相同的dialog 表示每半小時換一次
DELETE_PHOTO_LEAVING_ROOM = False
DELETE_PHOTO_AFTER_TIME = False

CERTAIN_TIME_FOR_DELETE_PHOTO = 24 * 15  # the all photos in room are removed every 15 days
MAXIMUM_FOR_DELETE_PHOTO = 30  # each players in single room at most save 30 pieces of photo

ROOMTIME_MIN = {1: 60, 2: 20, 3: 15, 4: 12, 5: 10, 6: 8, 7: 8, 8: 8}

# for SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = str(os.getenv('GMAIL'))
EMAIL_HOST_PASSWORD = str(os.getenv('GMAIL_FOR_MAC_MAIL'))
EMAIL_FROM = 'TEST <'+str(os.getenv('GMAIL'))+'>'

# for chat signup
SECONDS_FOR_CACHE_TOKEN = 1800
SECONDS_FOR_CACHE_EMAIL = 600
